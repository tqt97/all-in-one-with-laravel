name: Laravel

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    # Setup PHP
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, pdo_sqlite
        coverage: none

    # Checkout code
    - uses: actions/checkout@v4

    # Copy .env
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    # Install Composer dependencies (using cache)
    - name: Get Composer Cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-${{ hashFiles('composer.lock') }}
        restore-keys: composer-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    # Clear caches (important for fresh dev environment)
    - name: Clear Laravel Cache
      run: |
        php artisan optimize:clear
        php artisan config:clear
        php artisan cache:clear
        php artisan route:clear
        php artisan view:clear

    # Generate key
    - name: Generate key
      run: php artisan key:generate

    # Set directory permissions
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    # Create SQLite database
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    # Cache node_modules for faster build
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-

    # Install npm dependencies
    - name: Install NPM dependencies
      run: npm ci

    # Build frontend assets
    - name: Build frontend assets
      run: npm run build

    # Run tests
    - name: Run Laravel Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test
